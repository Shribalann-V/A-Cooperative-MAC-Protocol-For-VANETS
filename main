clear;
import Packet.*;
import Node.*;
xmin=0;
xmax=1000;
n=50;
x_s=round(xmin+rand(1,n)*(xmax-xmin));
x_s=sort(x_s);
y_s=[5;10;15];
vehicles(50,1)=Node();
%speeds=[10,20,30];
speeds=[10;20;30];
for i=1:n
vehicles(i).id=i;
vehicles(i).x=x_s(i);
%vehicles(i).y=x_s(i);
vehicles(i).y=y_s(randi([1 3]));
%change
vehicles(i).packetToSend=Packet(vehicles(i));
vehicles(i).range=300;
vehicles(i).acquiredSlot=randi([1 60]);
vehicles(i).frameInfo(i)=1;
vehicles(i).speed=speeds(randi([1 3]));
end
%dataPacket=Packet(nodes(1));
%dataPacket.type="data"
%dataPacket.sourceId=1;
%dataPacket.relayId=1;
%dataPacket.destinationId=n;
%nodes(1).packetQueue=dataPacket;
disp(vehicles(3).x);
success=false;
current_Slot=1;
round=1;
notset=true;
numberOfTransmission=zeros(n,1);
collisions=0;
while round<6
plot([vehicles.x],[vehicles.y],"r>");
pause(0.2);
for i=1:n
vehicles=vehicles(i).acquireSlot(current_Slot,vehicles);
end
for i=1:n
[vehicles,numberOfTransmission]=vehicles(i).sendPackets(vehicles,current_Slot,numberOfTransmission);
end
[vehicles,lostSlot]=arrayfun(@(x)x.processPacket(current_Slot),vehicles);
for s=1:numel(lostSlot)
if lostSlot(s)==1
collisions=collisions+1;
end
end
vehicles=arrayfun(@(x)x.incrementx(),vehicles);
if current_Slot==60
current_Slot=1;
disp("round"+round+"over");
round=round+1;
else
current_Slot=current_Slot+1;
end
end
disp(collisions);

